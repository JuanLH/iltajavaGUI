/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Clases.Respuesta;
import Clases.ventaFactura;
import Clientes.ClienteVenta_Factura;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonParser;
import dto.DTOventaFactura;
import java.util.ArrayList;
import Clientes.ClienteAlquilerFac;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import Clases.alquilerFactura;
import Clientes.genericMehod;

/**
 *
 * @author Raul
 */
public class BuscarFactura extends javax.swing.JDialog {

    /**
     * Creates new form BuscarFactura
     */
    public BuscarFactura(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        labelMensage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jButton1.setText("Seleccionar");

        jButton2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jButton2.setText("Cancelar");

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel1.setText("Buscar Factura");

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel2.setText("Buscar por ID");

        txtId.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdKeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Venta Factura", "Alquiler Factura" }));

        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        labelMensage.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(labelMensage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labelMensage, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyReleased

    }//GEN-LAST:event_txtIdKeyReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       if (jComboBox1.getSelectedItem().equals("Venta Factura"))
       {
           
            try
            {
        
                if("".equals(txtId.getText()))
                {
                    return;
                }
                
                ClienteVenta_Factura buscarventafactura = new ClienteVenta_Factura();
                DefaultTableModel modelo = new DefaultTableModel();
     
                List<ventaFactura> lista = new ArrayList<ventaFactura>(); 
                Respuesta res = buscarventafactura.getfactura_id("e4d14ef854bc40f96e7561a9e42fb868",txtId.getText());
                
                System.out.print(res.getMensaje()+"<-------*--*------");//Imprime mensage  Respeusta
      
                if (res.getId() == 1)
                {   
                    Gson json = new Gson();
                    JsonElement son = new JsonParser().parse(res.getMensaje());
                    //JsonParser array = son.getAsString();
                    
                        System.out.println("con foreach");
                  
                        ventaFactura ventafactura = new ventaFactura();
                        ventafactura = json.fromJson(son,ventaFactura.class);
                        System.out.println(ventafactura.getF_hecha_por());
                

            
                    // Declaramos un vector de columnas
                    String[] col = {"ID","Tipo Factura","ID Cliente","ID Usuario","Monto","ID Orden","Fecha","Hecha por","Balance","Pagado"};
                 
                    // ciclo for para agregar cada una de las columnas
                    for (int i=0;i<col.length;i++)
                    {
                        modelo.addColumn(col[i]);
                    }                  
                        int k;   
                        k=0;
                        Object[] fila = new Object[10];
                        fila[k++]=(Object)ventafactura.getF_id();
                        fila[k++]=(Object)ventafactura.getF_tipo_factura();
                        fila[k++]=(Object)ventafactura.getF_id_t_cliente();
                        fila[k++]=(Object)ventafactura.getF_id_t_usuario();
                        fila[k++]=(Object)ventafactura.getF_monto();
                        fila[k++]=(Object)ventafactura.getF_id_t_orden();
                        fila[k++]=(Object)ventafactura.getF_fecha();
                        fila[k++]=(Object)ventafactura.getF_hecha_por();
                        fila[k++]=(Object)ventafactura.getF_balance();
                        fila[k++]=(Object)ventafactura.isF_pagada();
                        modelo.addRow(fila);
                        
                  
                  jTable1.setModel(modelo);
                  labelMensage.setText("Hecho");
                }
                else if(res.getId()==0)
                {
                    labelMensage.setText(res.getMensaje());
                }
                else if(res.getId()==2)
                {
                    labelMensage.setText(res.getMensaje());
                }
                else if(res.getId()==-1)
                {
                    labelMensage.setText("Error de la bdd");
                }
                else
                {
                    labelMensage.setText("*Error* Desconocido");
                }
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
       }//Fin   del If-----------------------
       if (jComboBox1.getSelectedItem().equals("Alquiler Factura"))
       {
           try
            {
        
                if("".equals(txtId.getText()))
                {
                    return;
                }
                
                ClienteAlquilerFac ClientAlquiler = new ClienteAlquilerFac();
                DefaultTableModel modelo = new DefaultTableModel();
     
                //List<ventaFactura> lista = new ArrayList<ventaFactura>(); 
                Respuesta res =ClientAlquiler.getAlquilerFactura_Id("e4d14ef854bc40f96e7561a9e42fb868",txtId.getText());
                
                System.out.print(res.getMensaje()+"<-------*--*------");//Imprime mensage  Respuesta
      
                if (res.getId() == 1)
                {   
                    Gson json = new Gson();
         
                    JsonElement son = new JsonParser().parse(res.getMensaje());
                   // JsonArray array = son.getAsJsonArray();
   
         
          
                    System.out.println("con foreach");
                    
                    
                        alquilerFactura alqfactura = new alquilerFactura();
                        alqfactura = json.fromJson(son, alquilerFactura.class);
                
                        //lista.add(ventafactura);
                    

            
                    // Declaramos un vector de columnas
                    String[] col = {"Id","Tipo Fac","id Cliente","id Usua","Date","Hecha por","monto","balance","Pagada Status"};
                 
                    // ciclo for para agregar cada una de las columnas
                    for (int i=0;i<col.length;i++)
                    {
                        modelo.addColumn(col[i]);
                    }    
              
                    int k;
                   
               
                       
                        k=0;
                        Object[] fila = new Object[9];
                        fila[k++]=(Object)alqfactura.getF_id();
                        fila[k++]=(Object)alqfactura.getF_tipo_factura();
                        fila[k++]=(Object)alqfactura.getF_id_t_cliente();
                        fila[k++]=(Object)alqfactura.getF_id_t_usuarios();
                        fila[k++]=(Object)alqfactura.getF_fecha();
                        fila[k++]=(Object)alqfactura.getF_hecha_por();
                        fila[k++]=(Object)alqfactura.getF_monto();
                        fila[k++]=(Object)alqfactura.getF_balance();
                        fila[k++]=(Object)alqfactura.isF_pagada();
                        
                        
                        
                        modelo.addRow(fila);
                        
                  
                  jTable1.setModel(modelo);
                }
                else if(res.getId()==0)
                {
                    labelMensage.setText(res.getMensaje());
                }
                else if(res.getId()==2)
                {
                    labelMensage.setText(res.getMensaje());
                }
                else if(res.getId()==-1)
                {
                    labelMensage.setText("Error de la bdd");
                }
                else
                {
                    labelMensage.setText("*Error* Desconocido");
                }
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
           
           
           
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BuscarFactura dialog = new BuscarFactura(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelMensage;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
