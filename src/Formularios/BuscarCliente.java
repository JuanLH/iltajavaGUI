/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Clases.Respuesta;
import Clases.cliente;
import Clientes.ClienteCliente;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonParser;
//import com.sun.glass.events.KeyEvent;
import dto.DTOcliente;
import static dto.DTOcliente.llenarCliente;
import dto.DTOgeneral;
import static dto.DTOgeneral.bloquearTabla;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Raul
 */
public class BuscarCliente extends javax.swing.JDialog {
    
    /**
     * Creates new form BuscarCleinte
     */
    public BuscarCliente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextField2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jButton1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jButton1.setText("Seleccionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jButton2.setText("Cancelar");

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel1.setText("Buscar Cliente");

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel2.setText("Buscar por Nombre");

        jLabel3.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel3.setText("Buscar por ID");

        jTextField1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(10, 10, 10)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jTable1.getSelectedRow()==-1)return;
        llenarCliente(jTable1);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
            
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
 
      try
      {
        
        if("".equals(jTextField1.getText()))
      {return;}
      ClienteCliente buscarcliente = new ClienteCliente();
      DefaultTableModel modelo = new DefaultTableModel();
     
      List<cliente> lista = new ArrayList<cliente>(); 
      Respuesta res = buscarcliente.getCliente_nombre_apellido("0a6077e8f50ce3b2c3a0b6aa19ccf1b1",jTextField1.getText());
      
      
      if (res.getId() > 0)
      {   
            Gson json = new Gson();
         
            JsonElement son = new JsonParser().parse(res.getMensaje());
            JsonArray array = son.getAsJsonArray();
   
         
          
            System.out.println("con foreach");
            for (JsonElement json2: array)
            {
                cliente clien = new cliente();
                clien = json.fromJson(json2, cliente.class);
                
                lista.add(clien);
                
            }

            
            // Declaramos un vector de columnas
            String[] col = {"ID","Nombre","Apellido","Direccion","Cedula","Telefono 1","Telefono 2","E-Mail"};
                 
            // ciclo for para agregar cada una de las columnas
               for (int i=0;i<col.length;i++)
                   modelo.addColumn(col[i]);
              
               int k;
                for (cliente c: lista)
            {    
                
                //System.out.println(c.getF_alquilerVenta());
                k=0;
                Object[] fila = new Object[10];
                fila[k++]=(Object)c.getF_id();
                fila[k++]=(Object)c.getF_nombre();
                fila[k++]=(Object)c.getF_apellido();
                fila[k++]=(Object)c.getF_direccion();
                fila[k++]=(Object)c.getF_cedula();
                fila[k++]=(Object)c.getF_telefono1();
                fila[k++]=(Object)c.getF_telefono2();
                fila[k++]=(Object)c.getF_email();
                modelo.addRow(fila);
                //System.out.println("Mensaje del webservice = "+c.getF_id());
                
            }
                
        
           
//             System.out.println("con lista");
//            //
//             int k;
//            TypeToken<List<Productos>> token = new  TypeToken<List<Productos>>(){};
//            List<Productos> lis = json.fromJson(res.getMensaje(),token.getType());
//            // Ciclo for para agregar las filas
//            for (Productos p: lis)
//            {    
//                
//                System.out.println(p.getF_cantidadVenta());
//                k=0;
//                Object[] fila = new Object[11];
//                fila[k++]=(Object)p.getF_id();
//                fila[k++]=(Object)p.getF_nombre();
//                fila[k++]=(Object)p.getF_descripcion();
//                fila[k++]=(Object)p.getF_costo();
//                fila[k++]=(Object)p.getF_precioVenta();
//                fila[k++]=(Object)p.getF_precioAlquiler();
//                fila[k++]=(Object)p.getF_alquilerVenta();
//                fila[k++]=(Object)p.getF_cantidadALquiler();
//                fila[k++]=(Object)p.getF_cantidadVenta();
//                fila[k++]=(Object)p.getF_diasRecuperacion();
//                modelo.addRow(fila);
//                System.out.println("token = "+p.getF_id());
//                
//            }
            jTable1.setModel(modelo);
      }
      }
      catch(Exception e)
              {
               e.printStackTrace();
              }        // TODO add your handling code here:
        bloquearTabla(jTable1);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 1)
        {DTOcliente.llenarCliente(jTable1);}
        
        if (evt.getClickCount()==2)this.dispose();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
        try
      {
        
        if("".equals(jTextField1.getText()))
      {return;}
      ClienteCliente buscarcliente = new ClienteCliente();
      DefaultTableModel modelo = new DefaultTableModel();
     
      List<cliente> lista = new ArrayList<cliente>(); 
      Respuesta res = buscarcliente.getCliente_nombre_apellido("0a6077e8f50ce3b2c3a0b6aa19ccf1b1",jTextField1.getText());
      
      
      if (res.getId() > 0)
      {   
            Gson json = new Gson();
         
            JsonElement son = new JsonParser().parse(res.getMensaje());
            JsonArray array = son.getAsJsonArray();
   
         
          
            System.out.println("con foreach");
            for (JsonElement json2: array)
            {
                cliente clien = new cliente();
                clien = json.fromJson(json2, cliente.class);
                
                lista.add(clien);
                
            }

            
            // Declaramos un vector de columnas
            String[] col = {"ID","Nombre","Apellido","Direccion","Cedula","Telefono 1","Telefono 2","E-Mail"};
                 
            // ciclo for para agregar cada una de las columnas
               for (int i=0;i<col.length;i++)
                   modelo.addColumn(col[i]);
              
               int k;
                for (cliente c: lista)
            {    
                
                //System.out.println(c.getF_alquilerVenta());
                k=0;
                Object[] fila = new Object[10];
                fila[k++]=(Object)c.getF_id();
                fila[k++]=(Object)c.getF_nombre();
                fila[k++]=(Object)c.getF_apellido();
                fila[k++]=(Object)c.getF_direccion();
                fila[k++]=(Object)c.getF_cedula();
                fila[k++]=(Object)c.getF_telefono1();
                fila[k++]=(Object)c.getF_telefono2();
                fila[k++]=(Object)c.getF_email();
                modelo.addRow(fila);
                //System.out.println("Mensaje del webservice = "+c.getF_id());
                
            }
                
        
           
//             System.out.println("con lista");
//            //
//             int k;
//            TypeToken<List<Productos>> token = new  TypeToken<List<Productos>>(){};
//            List<Productos> lis = json.fromJson(res.getMensaje(),token.getType());
//            // Ciclo for para agregar las filas
//            for (Productos p: lis)
//            {    
//                
//                System.out.println(p.getF_cantidadVenta());
//                k=0;
//                Object[] fila = new Object[11];
//                fila[k++]=(Object)p.getF_id();
//                fila[k++]=(Object)p.getF_nombre();
//                fila[k++]=(Object)p.getF_descripcion();
//                fila[k++]=(Object)p.getF_costo();
//                fila[k++]=(Object)p.getF_precioVenta();
//                fila[k++]=(Object)p.getF_precioAlquiler();
//                fila[k++]=(Object)p.getF_alquilerVenta();
//                fila[k++]=(Object)p.getF_cantidadALquiler();
//                fila[k++]=(Object)p.getF_cantidadVenta();
//                fila[k++]=(Object)p.getF_diasRecuperacion();
//                modelo.addRow(fila);
//                System.out.println("token = "+p.getF_id());
//                
//            }
            jTable1.setModel(modelo);
      }
      }
      catch(Exception e)
              {
               e.printStackTrace();
              }        // TODO add your handling code here:
        bloquearTabla(jTable1);
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BuscarCliente dialog = new BuscarCliente(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
